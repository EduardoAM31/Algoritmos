#include <bits/stdc++.h>
using namespace std;
#define int long long
#define vi vector<int>
#define vvi vector<vi>
int t=0;
vvi adj;
vi head, val, pos, vet, dist, pai;
void dfs_hld(int u = 0, int p = -1){
    dist[u] = 1;
    for(auto& v : adj[u]){
        if(v == p)continue;
        dfs_hld(v,u);
        dist[u] += dist[v];
        if(dist[u] > dist[adj[u][0]])
            swap(u, adj[u][0]);
    }
}
void build_hld(int u = 0,int p = -1){
    pos[u] = t++;
    vet[pos[u]] = val[u];
    for(auto& v : adj[u]){
        if(v == p)continue;
        pai[v] = u;
        head[v] = (v == adj[u][0] ? head[u] : v);
        build_hld(v, u);
    }
}
int query_hld(int a,int b){
    if(pos[a] < pos[b])swap(a,b);
    if(head[a] == head[b])return query_seg(pos[a], pos[b]);
    return query_hld(pai[head[a]], b) + query_seg(pos[head[b]], pos[b]);
}
void update_hld(int a,int b,int x){
    if(pos[a] < pos[b])swap(a,b);
    if(head[a] == head[b])update_seg(pos[a], pos[b]);
    update_hld(pai[head[a]], b, x);
    update_seg(pos[head[b]], pos[b], x);
}
signed main(){
    int n,qq;
    cin>>n>>qq;
    adj = vvi(n); 
    head = val = pos = vet = dist = vi(n);
    for(auto &i : val) 
        cin>>i;
    for(int i=0;i<n-1;i++){
        int u,v;
        cin>>u>>v;
        u--,v--;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    dfs_hld();
    build_hld();
    build_seg();
    while(qq--){
        int a; cin>>a;
        int u, v; cin>>u>>v; --u, --v;
        if(a == 1){
            int x; cin>>x;
            update_hld(u, v, x);
        } else{
            cout << query_hld(u, v) << '\n'; 
        }
    }
}
